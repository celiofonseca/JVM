#ifndef INSTRUCTIONS_H_
#define INSTRUCTIONS_H_

#include "classloader.h" /*por causa dos tipos */

/* todo criei essa funcao pra testes, pode deletar depois se quiserem. vcs q sabem */
void executeInstruction(u1 opcode);

/* Um array contendo ponteiros para as instruções */
int (*instr[256]) (); /*todo vai retornar algo mesmo ?? pra mim era void */


/* Inicializa o array de instruções */
void initializeInstr();



/* As instruções possíveis */
int funct_nop();
int funct_aconst_null();
int funct_iconst_m1();
int funct_iconst_0();
int funct_iconst_1();
int funct_iconst_2();
int funct_iconst_3();
int funct_iconst_4();
int funct_iconst_5();
int funct_lconst_0();
int funct_lconst_1();
int funct_fconst_0();
int funct_fconst_1();
int funct_fconst_2();
int funct_dconst_0();
int funct_dconst_1();
int funct_bipush();
int funct_sipush();
int funct_ldc();
int funct_ldc_w();
int funct_ldc2_w();
int funct_iload();
int funct_lload();
int funct_fload();
int funct_dload();
int funct_aload();
int funct_iload_0();
int funct_iload_1();
int funct_iload_2();
int funct_iload_3();
int funct_lload_0();
int funct_lload_1();
int funct_lload_2();
int funct_lload_3();
int funct_fload_0();
int funct_fload_1();
int funct_fload_2();
int funct_fload_3();
int funct_dload_0();
int funct_dload_1();
int funct_dload_2();
int funct_dload_3();
int funct_aload_0();
int funct_aload_1();
int funct_aload_2();
int funct_aload_3();
int funct_iaload();
int funct_laload();
int funct_faload();
int funct_daload();
int funct_aaload();
int funct_baload();
int funct_caload();
int funct_saload();
int funct_istore();
int funct_lstore();
int funct_fstore();
int funct_dstore();
int funct_astore();
int funct_istore_0();
int funct_istore_1();
int funct_istore_2();
int funct_istore_3();
int funct_lstore_0();
int funct_lstore_1();
int funct_lstore_2();
int funct_lstore_3();
int funct_fstore_0();
int funct_fstore_1();
int funct_fstore_2();
int funct_fstore_3();
int funct_dstore_0();
int funct_dstore_1();
int funct_dstore_2();
int funct_dstore_3();
int funct_astore_0();
int funct_astore_1();
int funct_astore_2();
int funct_astore_3();
int funct_iastore();
int funct_lastore();
int funct_fastore();
int funct_dastore();
int funct_aastore();
int funct_bastore();
int funct_castore();
int funct_sastore();
int funct_pop();
int funct_pop2();
int funct_dup();
int funct_dup_x1();
int funct_dup_x2();
int funct_dup2();
int funct_dup2_x1();
int funct_dup2_x2();
int funct_swap();
int funct_iadd();
int funct_ladd();
int funct_fadd();
int funct_dadd();
int funct_isub();
int funct_lsub();
int funct_fsub();
int funct_dsub();
int funct_imul();
int funct_lmul();
int funct_fmul();
int funct_dmul();
int funct_idiv();
int funct_ldiv();
int funct_fdiv();
int funct_ddiv();
int funct_irem();
int funct_lrem();
int funct_frem();
int funct_drem();
int funct_ineg();
int funct_lneg();
int funct_fneg();
int funct_dneg();
int funct_ishl();
int funct_lshl();
int funct_ishr();
int funct_lshr();
int funct_iushr();
int funct_lushr();
int funct_iand();
int funct_land();
int funct_ior();
int funct_lor();
int funct_ixor();
int funct_lxor();
int funct_iinc();
int funct_i2l();
int funct_i2f();
int funct_i2d();
int funct_l2i();
int funct_l2f();
int funct_l2d();
int funct_f2i();
int funct_f2l();
int funct_f2d();
int funct_d2i();
int funct_d2l();
int funct_d2f();
int funct_i2b();
int funct_i2c();
int funct_i2s();
int funct_lcmp();
int funct_fcmpl();
int funct_fcmpg();
int funct_dcmpl();
int funct_dcmpg();
int funct_ifeq();
int funct_ifne();
int funct_iflt();
int funct_ifge();
int funct_ifgt();
int funct_ifle();
int funct_if_icmpeq();
int funct_if_icmpne();
int funct_if_icmplt();
int funct_if_icmpge();
int funct_if_icmpgt();
int funct_if_icmple();
int funct_if_acmpeq();
int funct_if_acmpne();
int funct_goto();
int funct_jsr();
int funct_ret();
int funct_tableswitch();
int funct_lookupswitch();
int funct_ireturn();
int funct_lreturn();
int funct_freturn();
int funct_dreturn();
int funct_areturn();
int funct_return();
int funct_getstatic();
int funct_putstatic();
int funct_getfield();
int funct_putfield();
int funct_invokevirtual();
int funct_invokespecial();
int funct_invokestatic();
int funct_invokeinterface();
/*int funct_nao_utilizada;*/
int funct_new();
int funct_newarray();
int funct_anewarray();
int funct_arraylength();
int funct_athrow();
int funct_checkcast();
int funct_instanceof();
int funct_monitorenter();
int funct_monitorexit();
int funct_wide();
int funct_multianewarray();
int funct_ifnull();
int funct_ifnonnull();
int funct_goto_w();
int funct_jsr_w();


#endif /* INSTRUCTIONS_H_ */
